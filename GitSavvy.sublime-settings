{
    /*
        Change this to `false` if you don't wish to be prompted when
        discarding files.
     */
    "prompt_before_destructive_action": true,

    /*
        Uncomment the setting below to explicitly set which git binary
        to use.
     */
    // "git_path": "/usr/bin/git",

    /*
        Change this to `true` when doing dev work on GitSavvy.
     */
    "dev_mode": false,

    /*
        Enter your github API key in the field below.  To interact with
        a GitHub Enterprise instance, add a field with the FQDN as the key
        and the API key as the value.
     */
    "api_tokens": {
        // "github.com": "ADD YOUR TOKEN HERE"
    },

    /*
        Change this to `true` to display a diff for the current commit
        when writing a commit message.
     */
    "show_commit_diff": false,

    /*
        Change this to `true` to scroll to the first hunk automatically when
        you open the inline-diff view.
     */
    "inline_diff_auto_scoll": false,

    "colors": {
        /*
            Colors used by the inline-diff view to display changes.
         */
        "inline_diff": {
            "add_foreground": "#F9F9F4",
            "add_background": "#37A832",
            "add_foreground_bold": "#F9F9F4",
            "add_background_bold": "#287020",
            "remove_foreground": "#F9F9F4",
            "remove_background": "#A83732",
            "remove_foreground_bold": "#F9F9F4",
            "remove_background_bold": "#702820"
        }
    },

    /*
        Change this to `true` when you would like inline diff to
        ignore EOL whitespace changes.
        See details in https://github.com/divmain/GitSavvy/issues/177
     */
    "inline_diff_ignore_eol_whitespaces": false,

    /*
        Add entries to this array (e.g. "pull" or "push") if you'd like the
        output of these Git commands to always be shown in a panel.
     */
    "show_panel_for": [],

    /*
        Use the Sublime configured syntax for COMMIT_EDITMSG rather than
        the custom bundled syntax that comes with GitSavvy.
    */

    "use_syntax_for_commit_editmsg": false,

    /*
        Change this to `false` to suppress the input in the panel output.
     */
    "show_input_in_output": true,

    /*
        Change this to `false` to suppress Git status in ST3 status bar.
     */
    "git_status_in_status_bar": true,

    /*
        When entering a tag message, this will be used if the message is empty.
        The replacement value "{tag_name}" is optional, but recommended.
     */
    "default_tag_message": "Tag {tag_name}",

    /*
        The filename for extra customized info to be displayed after the default
        COMMIT_HELP_TEXT, such as commit message rules/tips/conventions.
        Place this file at the root of the repo, and it should be commited to the
        repo as well.
        The file name defaults to `.commit_help`.
        If this file is not presented, the functionality is totally ignored.
     */
    "commit_help_extra_file": ".commit_help",

    /*
        For each command specified, always include the command line flags
        indicated in the global_flags hash.
     */
    "global_flags": {
        // --no-columns is not supported in Git versions <1.7.11.  If Git is configured
        //   to use columns globally, --no-columns should be added here.
        // "branch": ["--no-columns"]
    },

    /*
        Set this to `true` to display remotes in the branch dashboard by default.
     */
    "show_remotes_in_branch_dashboard": false,

    /*
        When set to `true`, GitSavvy will offer to set the upstream on `git: push`
        when tracking branch is not configured.
     */
    "prompt_for_tracking_branch": true,

    /*
        When set to `true`, GitSavvy will automatically display more info about the
        current commit in a quick panel.  When set to `false`, this function must
        be invoked manually.
     */
    "graph_show_more_commit_info": true,

    /*
        Update the desired graph arguments for a customized experience.
        Do not add "--all" in this setting, it is added in graph all branches

        NOTE: Changes you make may break in-view functionality, so use with caution.
     */
    // "git_graph_args": ["log", "--pretty=format:%h%d (%ar) by `%an` %s", "--graph"],
    "git_graph_args": ["log", "--oneline", "--graph", "--decorate"]
}
